<!-- Contact Section Start -->
<section id="contact">
  <div class="container sp8">
    <div class="section__heading">
      <h2 class="sub-heading mb2">Contact Me</h2>
      <p>
        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Corrupti,
        vitae. Lorem ipsum dolor sit amet consectetur adipisicing elit.
      </p>
    </div>
    <form class="contact-form contact-form-grid" novalidate>
      <div class="contact-info column-left">
        <h4 class="contact-info__heading">Contact info</h4>
        <ul class="contact-info__items">
          <li class="contact-info__item">
            <span class="contact-info__icon"
              ><i class="fa fa-map-marker"></i></span
            ><span class="contact-info__text">Austin, TX</span>
          </li>
          <li class="contact-info__item">
            <span class="contact-info__icon"
              ><i class="fa fa-envelope"></i></span
            ><span class="contact-info__text">codingafterthirty@gmail.com</span>
          </li>
          <li class="contact-info__item">
            <span class="contact-info__icon"><i class="fa fa-phone"></i></span
            ><span class="contact-info__text"> +12548616475</span>
          </li>
          <li class="contact-info__item">
            <span class="contact-info__icon"><i class="fa fa-globe"></i></span
            ><span class="contact-info__text">www.codingafterthirty.com</span>
          </li>
        </ul>
      </div>
      <div class="column-right">
        <div class="form-input-flex">
          <div class="flexhalf">
            <div class="form-group">
              <label for="fullName">Full Name</label><br />
              <span class="form-controlcontactName"
                ><input
                  type="text"
                  name="contactName"
                  value=""
                  size="40"
                  class="form-input"
                  id="fullName"
                  aria-required="true"
                  aria-invalid="false"
                  placeholder="Type your name"
                  data-valid="false"
                  data-label="Name"
                /></span
              >
            </div>
          </div>
          <div class="flexhalf">
            <div class="form-group">
              <label for="phoneNumber">Phone Number</label><br />
              <span class="form-control-wrap contactPhone"
                ><input
                  type="tel"
                  name="phoneNumber"
                  value=""
                  size="40"
                  class="form-input contact-phone"
                  id="phoneNumber"
                  aria-required="true"
                  aria-invalid="false"
                  placeholder="Type your phone number"
                  data-valid="false"
                  data-label="Phone number"
                /></span
              >
            </div>
          </div>
          <div class="flexfull">
            <div class="form-group">
              <label for="form-email">Email</label><br />
              <span class="form-control-wrap contactMail"
                ><input
                  type="email"
                  name="email"
                  value=""
                  size="40"
                  class="form-input contact-mail"
                  id="email"
                  aria-required="true"
                  aria-invalid="false"
                  placeholder="Type your email address"
                  data-valid="false"
                  data-label="Email"
                /></span
              >
            </div>
          </div>
        </div>

        <div class="form-group">
          <label for="message">Your Message</label><br />
          <span class="form-control-wrap contactMessage">
            <textarea
              name="message"
              class="form-input contact-message textarea"
              id="message"
              aria-invalid="false"
              placeholder="Type your message here"
              data-valid="false"
              data-label="Message"></textarea>
          </span>
        </div>

        <button id="submitButton" class="button form-btn-mrl">Submit</button>
        <button id="clearButton" class="button form-btn-mrl">Reset</button>
      </div>
    </form>
  </div>
</section>

<script>
  /*****************************************************
  REGEX FOR FORM VALIDATION
*****************************************************/
  const checkNameRegex = /^[A-Za-z ]+$/;
  const checkPhoneRegex =
    /^(\+\d{1,2}\s?)?1?\-?\.?\s?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/;
  const checkEmailRegex =
    /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/;
  const checkMessageRegex = /^[a-zA-Z0-9.,:;"'$&%!?_+=() \/ -]*$/;

  const regex = [
    checkNameRegex,
    checkPhoneRegex,
    checkEmailRegex,
    checkMessageRegex,
  ];

  /*****************************************************
  HELEPER FUNCTIONS
*****************************************************/

  function removeNthItemsFromArray(items, nth) {
    return items.splice(0, items.length - nth);
  }

  /*****************************************************
  SCROLL TO THE TOP FUNCTION
*****************************************************/

  function backToTop(elementSelector) {
    const node = document.querySelector(elementSelector);
    node.addEventListener("click", () => window.scrollTo(0, 0));
  }

  /*****************************************************
  LOCAL STORAGE
*****************************************************/
  const tempData = {};

  function populateFormData(data: string) {
    const node = document.querySelector(".contact-form");
    if (node) {
      for (const [key, item] of Object.entries(data)) {
        const { value, isValid } = item;
        node[key].value = value;
        node[key].dataset.valid = isValid;
        node[key].style.backgroundColor = isValid ? "#186918" : "#822554";
      }
    }
  }

  function setLocalStorage(key, value, isValid) {
    tempData[key] = { id: key, value, isValid };

    if (localStorage.getItem("localState")) {
      const current = JSON.parse(localStorage.getItem("localState"));
      const updated = { ...current, ...tempData };
      localStorage.setItem("localState", JSON.stringify(updated));
    } else {
      localStorage.setItem("localState", JSON.stringify(tempData));
    }
  }

  function getLocalStorage(key) {
    if (localStorage.getItem(key)) {
      const data = JSON.parse(localStorage.getItem(key));
      populateFormData(data);
    }
  }

  /*****************************************************
  FORM VALIDATION VER 1 FUNCTION
*****************************************************/

  function checkInputWithRegex(item, regex) {
    function applyStyling(item, result) {
      item.style.backgroundColor = result ? "#186918" : "#822554";
      item.style.color = "white";
      item.dataset.valid = result ? "true" : "false";
    }

    function handleKeyUp(e) {
      const { name, value } = e.target;
      const trimmed = value.trim();
      const result = regex.test(trimmed) && trimmed.length > 0;
      applyStyling(item, result);
      setLocalStorage(name, trimmed, result);
    }

    item.addEventListener("keyup", handleKeyUp);
  }

  function handleFormSubmission(formId, inputValidation, regex) {
    const node = document.querySelector(formId);
    const elementsArray = Array.from(node);
    const inputItemsOnly = removeNthItemsFromArray(elementsArray, 2);
    const clearButton = document.getElementById("clearButton");

    function resetForm(items) {
      items.forEach((item) => {
        item.style.backgroundColor = "#363737";
        item.dataset.valid = "false";
        item.value = "";
      });

      localStorage.removeItem("localState");
    }

    function sendData(items) {
      const dataToSend = {};
      items.forEach((item) => (dataToSend[item.name] = item.value));
      console.log(dataToSend, "sending this data");
    }

    function findError(items) {
      return items.filter((item) => item.isValid !== true);
    }

    function handleClear(e) {
      e.preventDefault();
      resetForm(inputItemsOnly);
    }

    function handleSubmit(e) {
      e.preventDefault();
      let isValid = [];

      inputItemsOnly.forEach((item) => {
        item.style.backgroundColor =
          item.dataset.valid == "true" ? "#186918" : "#822554";

        isValid.push({
          fieldId: item.id,
          isValid: item.dataset.valid == "true",
          value: item.value,
          label: item.dataset.label,
        });
      });

      console.log(isValid);

      if (!findError(isValid).length) {
        sendData(inputItemsOnly);
        resetForm(inputItemsOnly);
        alert("Great Success!");
      }
    }

    inputItemsOnly.forEach((item, index) =>
      inputValidation(item, regex[index])
    );
    node.addEventListener("submit", handleSubmit);
    clearButton.addEventListener("click", handleClear);
  }

  /*****************************************************
  FUNCTION CALLS
*****************************************************/
  handleFormSubmission(".contact-form", checkInputWithRegex, regex);
  getLocalStorage("localState");
</script>
